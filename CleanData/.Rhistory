ggscatter(LeafRootSize, x = "Area", y = "Leaf.Number",
color = "black", shape = 21, size = 3, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 0, label.sep = "\n")) +
ylab("Leaf Number")+
xlab("Root size")+
ggtitle("Linear relationship between leaf number and root size in I.purpurea")
ggscatter(LeafRootSizeHed, x = "Area", y = "Leaf.Number",
color = "black", shape = 21, size = 3, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 0, label.sep = "\n")) +
ylab("Leaf Number")+
xlab("Root size")+
ggtitle("Linear relationship between leaf number and root size in I.hederacea")
# Chunk 42
Fit2$SeedNumberResid<-NA
SeedResiduals<-(lm(SeedNumber~Block+Leaf.Number,Fit2))$residuals
Fit2[names(SeedResiduals),"SeedNumberResid"]<-SeedResiduals
ggplot(Fit2,aes(SeedNumberResid,fill=Trt))+
geom_histogram()
# Removing block, size and flowering time
Fit3<-merge(Fit2,FlowerPA4)
Fit3$SeedNumberResid<-NA
SeedResiduals<-(lm(SeedNumber~Block+Leaf.Number+Flower_JulianDate,Fit3))$residuals
Fit3[names(SeedResiduals),"SeedNumberResid"]<-SeedResiduals
ggplot(Fit3,aes(SeedNumberResid,fill=Trt))+
geom_histogram()
# Chunk 43
Histo<-function(Trait){
plotNormalHistogram(BlkRmv[,Trait],main=names(BlkRmv[Trait]))
}
his.res2<-lapply(which(names(BlkRmv)%in%Focus),Histo)
# Chunk 44
SdMnSpeciesTrt<- aggregate(SeedNumberResid ~ Species+Trt, Fit2, mean) # Mean residual. NOTE I am using the version with block effects removed, only
names(SdMnSpeciesTrt)[3]<- "MeanSdNm" #Rename coloumn for mean seed number
# Merge average fitness of species and treatment
Fitmean<-merge(Fit2,SdMnSpeciesTrt,by=c("Species","Trt"))
# Calculate relative fitness as the observed seed number by the total mean seed number of that species and treatment.
Fitmean$Rel_Fit<-Fitmean$SeedNumberResid/Fitmean$MeanSdNm
ggplot(Fitmean, aes(x = factor(Species), y = Rel_Fit,fill=Trt)) +
geom_dotplot(dotsize=0.8,binaxis = "y", stackdir = "centerwhole",position = "dodge",alpha=0.5)+
theme_classic()
# Chunk 45
# Average phenotypic distance and relative fitness by treatment, maternal line and combination type
PhenoDist.Average<-aggregate(PhenotypicDistance~ML+Combos,Both,FUN=mean)
PhenoDistPCA1.Average<-aggregate(PhenDist_PCA1~ML+Combos,Both,FUN=mean)
PhenoDistPCA2.Average<-aggregate(PhenDist_PCA2~ML+Combos,Both,FUN=mean)
PhenoDistPC3D.Average<-aggregate(PhenotypicDistance3D~ML+Combos,Both,FUN=mean)
PhenoDistPC4D.Average<-aggregate(PhenotypicDistance4D~ML+Combos,Both,FUN=mean)
PhenoDistPCA3.Average<-aggregate(PhenDist_PCA3~ML+Combos,Both,FUN=mean)
PhenoDistPCA4.Average<-aggregate(PhenDist_PCA4~ML+Combos,Both,FUN=mean)
PhenoDistPCA13.Average<-aggregate(PhenotypicDistance13~ML+Combos,Both,FUN=mean)
PhenoDistPCA24.Average<-aggregate(PhenotypicDistance24~ML+Combos,Both,FUN=mean)
# Combine and save the phenotypic distances
AveragePhenoDist<-(unique(cbind(PhenoDist.Average,PhenoDistPC3D.Average,PhenoDistPC4D.Average,PhenoDistPCA1.Average,PhenoDistPCA2.Average,PhenoDistPCA3.Average,PhenoDistPCA4.Average,PhenoDistPCA13.Average,PhenoDistPCA24.Average)))
AveragePhenoDist<-AveragePhenoDist[, !duplicated(colnames(AveragePhenoDist))]
# Remove NA's in the combos for alone
Fitmean$Combos<-as.character(Fitmean$Combos)
Fitmean[which(Fitmean$Trt=="Alone"),]$Combos<-"none"
Fitmean$Combos<-as.factor(Fitmean$Combos)
RelFitMean<-aggregate(Rel_Fit~ML+Combos+Trt,Fitmean,mean)
AveragePhenoDist<-merge(RelFitMean,AveragePhenoDist)
# PCA 4 & 2
AveragePhenoDist$StdPD<-AveragePhenoDist$PhenotypicDistance
# PCA 1
AveragePhenoDist$StdPD_PCA1<-AveragePhenoDist$PhenDist_PCA1
# PCA 2
AveragePhenoDist$StdPD_PCA2<-AveragePhenoDist$PhenDist_PCA2
# PCA 4D
AveragePhenoDist$StdPD4d<-AveragePhenoDist$PhenotypicDistance4D #
# PCA 3D
AveragePhenoDist$StdPD3d<-AveragePhenoDist$PhenotypicDistance3D
# PCA 3
AveragePhenoDist$StdPD_PCA3<-AveragePhenoDist$PhenDist_PCA3
# PCA 2
AveragePhenoDist$StdPD_PCA4<-AveragePhenoDist$PhenDist_PCA4
# PC 1 and 3
AveragePhenoDist$StdPD_PCA13<-AveragePhenoDist$PhenotypicDistance13
# PC 2 and 4
AveragePhenoDist$StdPD_PCA24<-AveragePhenoDist$PhenotypicDistance24
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Examine evidence for selection
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# PCA 2D distance
# Abs distance PCA1/PCA4
AveragePhenoDist$StPDAbs<-abs(AveragePhenoDist$StdPD)
ggplot(AveragePhenoDist,aes(StPDAbs))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~StPDAbs,AveragePhenoDist))
# Abs distance PCA 4D
AveragePhenoDist$StPD4DAbs<-abs(AveragePhenoDist$StdPD4d)
ggplot(AveragePhenoDist,aes(StPD4DAbs))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~StPD4DAbs,AveragePhenoDist))
# Abs distance PCA 3D
AveragePhenoDist$StPD3DAbs<-abs(AveragePhenoDist$StdPD3d)
ggplot(AveragePhenoDist,aes(StPD3DAbs))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~StPD3DAbs,AveragePhenoDist))
plot(AveragePhenoDist$StPD3DAbs,AveragePhenoDist$Rel_Fit)
# Abs distance PCA 2D (1 & 3)
AveragePhenoDist$StPD13DAbs<-abs(AveragePhenoDist$StdPD_PCA13)
ggplot(AveragePhenoDist,aes(StPD13DAbs))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~StPD13DAbs,AveragePhenoDist))
plot(AveragePhenoDist$StPD13DAbs,AveragePhenoDist$Rel_Fit)
# Abs distance PCA 2D (2 & 4)
AveragePhenoDist$StPD24DAbs<-abs(AveragePhenoDist$StdPD_PCA24)
ggplot(AveragePhenoDist,aes(StPD24DAbs))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~StPD24DAbs,AveragePhenoDist))
plot(AveragePhenoDist$StPD24DAbs,AveragePhenoDist$Rel_Fit)
# PCA 1
# Absolute distance
AveragePhenoDist$AbsStdPD_PCA1<-abs(AveragePhenoDist$StdPD_PCA1)
ggplot(AveragePhenoDist,aes(AbsStdPD_PCA1))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~AbsStdPD_PCA1,AveragePhenoDist))
plot(AveragePhenoDist$AbsStdPD_PCA1,AveragePhenoDist$Rel_Fit)
# PCA 2
# Absolute distance
AveragePhenoDist$AbsStdPD_PCA2<-abs(AveragePhenoDist$StdPD_PCA2)
ggplot(AveragePhenoDist,aes(AbsStdPD_PCA2))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~AbsStdPD_PCA2,AveragePhenoDist)) # LEFT OFF HERE
plot(AveragePhenoDist$AbsStdPD_PCA2,AveragePhenoDist$Rel_Fit)
# PCA 3
# Absolute distance
AveragePhenoDist$AbsStdPD_PCA3<-abs(AveragePhenoDist$StdPD_PCA3)
ggplot(AveragePhenoDist,aes(AbsStdPD_PCA3))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~AbsStdPD_PCA3,AveragePhenoDist))
plot(AveragePhenoDist$AbsStdPD_PCA3,AveragePhenoDist$Rel_Fit)
# PCA 4
# Absolute distance
AveragePhenoDist$AbsStdPD_PCA4<-abs(AveragePhenoDist$StdPD_PCA4)
ggplot(AveragePhenoDist,aes(AbsStdPD_PCA4))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~AbsStdPD_PCA4,AveragePhenoDist))
# Lets plot this now
# Create a generic plotting function
PlotRegressionPD<-function(Data,mapping,Method=lm,Se=F,xTitle,colorpoint="red",colorline="gold",...){
ggplot()+
geom_point(data=Data,mapping,color=colorpoint,...)+
theme_classic()+
geom_smooth(data=Data,mapping,method=Method,se=Se,color= colorline,linetype="dashed")+
xlab(xTitle)+
ylab("Relative fitness")
}
# Topolgy PD plot
RT<-PlotRegressionPD(Data=AveragePhenoDist,alpha=0.4,mapping=aes(PhenDist_PCA1,Rel_Fit),xTitle="Phenotypic distance in root topology (PC1)",colorpoint = "black",colorline="black")+
geom_text(aes(label="p-value = 0.24", family="Times",  lineheight=.8,x=4,y=22,hjust = 0),size=5)+
geom_text(aes(label="B = -1.11", family="Times", lineheight=.8,x=4,y=25,hjust = 0),size=5)
# Root architecture
RA<-PlotRegressionPD(Data=AveragePhenoDist,alpha=0.4,mapping=aes(PhenDist_PCA2,Rel_Fit),xTitle="Phenotypic distance in root architecture (PC2)",colorpoint = "black",colorline="black")+
geom_text(aes(label="p-value = 0.04*", family="Times",  lineheight=.8,x=4,y=22,hjust = 0),size=5)+
geom_text(aes(label="B = 2.07", family="Times", lineheight=.8,x=4,y=25,hjust = 0),size=5)+
ylab("")
# Root morphology
RM<-PlotRegressionPD(Data=AveragePhenoDist,alpha=0.4,mapping=aes(PhenDist_PCA4,Rel_Fit),xTitle="Phenotypic distance in root morphology (PC4)",colorpoint = "black",colorline="black")+
geom_text(aes(label="p-value = 0.45", family="Times",  lineheight=.8,x=1.5,y=22,hjust = 0),size=5)+
geom_text(aes(label="B = -1.75", family="Times", lineheight=.8,x=1.5,y=25,hjust = 0),size=5)+
ylab("")
TwoD<-PlotRegressionPD(Data=AveragePhenoDist,alpha=0.4,mapping=aes(StPD24DAbs,Rel_Fit),xTitle="Phenotypic distance in 2D space (PC2 & PC4)",colorpoint = "black",colorline="black")+
geom_text(aes(label="p-value = 0.07^", family="Times",  lineheight=.8,x=6,y=22,hjust = 0),size=5)+
geom_text(aes(label="B = 1.90", family="Times", lineheight=.8,x=6,y=25,hjust = 0),size=5)+
ylab("")
ggarrange(RT,RA,RM,nrow=1,ncol=3,labels="AUTO",widths = c(0.5,0.5,0.5),heights=c(1.5,1.5),label.x = 0.15,label.y = 1)
# Chunk 46
# INDEX 1
AveragePhenoDist$StdPD2<-AveragePhenoDist$StPDAbs*AveragePhenoDist$StPDAbs
summary(lm(Rel_Fit~StdPD2+StPDAbs,AveragePhenoDist))
# INDEX 2
AveragePhenoDist$AbsStdPD2_PCA1<-AveragePhenoDist$AbsStdPD_PCA1*AveragePhenoDist$AbsStdPD_PCA1
summary(lm(Rel_Fit~AbsStdPD2_PCA1+AbsStdPD_PCA1,AveragePhenoDist))
# INDEX 3
AveragePhenoDist$AbsStdPD2_PCA2<-AveragePhenoDist$AbsStdPD_PCA2*AveragePhenoDist$AbsStdPD_PCA2
summary(lm(Rel_Fit~AbsStdPD2_PCA2+AbsStdPD_PCA2,AveragePhenoDist))
# PC3
AveragePhenoDist$AbsStdPD2_PCA3<-AveragePhenoDist$AbsStdPD_PCA3*AveragePhenoDist$AbsStdPD_PCA3
summary(lm(Rel_Fit~AbsStdPD2_PCA3+AbsStdPD_PCA3,AveragePhenoDist))
# PC4
AveragePhenoDist$AbsStdPD2_PCA4<-AveragePhenoDist$AbsStdPD_PCA4*AveragePhenoDist$AbsStdPD_PCA4
summary(lm(Rel_Fit~AbsStdPD2_PCA4+AbsStdPD_PCA4,AveragePhenoDist))
# 3D
AveragePhenoDist$AbsStdPD3D_2<-AveragePhenoDist$StPD3DAbs*AveragePhenoDist$StPD3DAbs
summary(lm(Rel_Fit~AbsStdPD3D_2+StPD3DAbs,AveragePhenoDist))
# 4D
AveragePhenoDist$AbsStdPD4D_2<-AveragePhenoDist$StPD4DAbs*AveragePhenoDist$StPD4DAbs
summary(lm(Rel_Fit~AbsStdPD4D_2+StPD4DAbs,AveragePhenoDist))
ggplot(AveragePhenoDist, aes(AbsStdPD_PCA2, Rel_Fit)) +
geom_point() +
stat_smooth(method="lm", formula=y~poly(x,2,raw=T),colour="red",se=F)+
theme_classic()+
geom_text(aes(label="P-value = 0.07", family="Times", fontface="bold", lineheight=.8,x=3,y=18,hjust = 0))+
geom_text(aes(label="Gamma = -3.30", family="Times", fontface="bold", lineheight=.8,x=3,y=20,hjust = 0))+
ggtitle("Quadratic selection on PCA 2 Phenotypic distance")
# Chunk 47
SubFit<-droplevels(subset(Fitmean,Fitmean$Species=="Ip"&Fitmean$Trt=="Inter"))
RelFitModel<-lmer(SeedNumberResid~(1|Combos),SubFit)
anova(RelFitModel)
ranova(RelFitModel)
# Chunk 48
# We expect those individuals in the 1st and 3rd interquartiles
# of phenotypic distance to have higher fitness relative to the closer the values
# are to the Right side extreme
# Steps
# Calculate the extremes of indiviuals greater than 1 standard deviation
# Assaign these individuals as 'LessSimilar' in either the 'Left' or 'Right'
# PCA 1
# Absolute distance
Q1<-quantile(AveragePhenoDist$AbsStdPD_PCA1)[2]
Q2<-quantile(AveragePhenoDist$AbsStdPD_PCA1)[3]
Q3<-quantile(AveragePhenoDist$AbsStdPD_PCA1)[3]
AveragePhenoDist$Similarity<-ifelse(AveragePhenoDist$AbsStdPD_PCA1<Q1,"High","Low")
AveragePhenoDist[AveragePhenoDist$AbsStdPD_PCA1>Q1&AveragePhenoDist$AbsStdPD_PCA1<Q3,"Similarity"]<-"Medium"
AveragePhenoDist$Similarity <- factor(AveragePhenoDist$Similarity, levels=c("Low", "Medium", "High"))
count(AveragePhenoDist,Similarity)
ggplot(AveragePhenoDist)+
geom_bar(aes(Similarity,Rel_Fit),stat="identity",position="dodge")
ggerrorplot(AveragePhenoDist, x = "Similarity", y = "Rel_Fit",
desc_stat = "mean_sd", color = "black",
add = "jitter", add.params = list(color = "darkgray")
)
# PCA 2
# Absolute distance
AveragePhenoDist$AbsStdPD_PCA2<-abs(AveragePhenoDist$StdPD_PCA2)
ggplot(AveragePhenoDist,aes(AbsStdPD_PCA2))+
geom_histogram(fill="gold")+
theme_classic()
summary(lm(Rel_Fit~AbsStdPD_PCA2,AveragePhenoDist)) # LEFT OFF HERE
plot(AveragePhenoDist$AbsStdPD_PCA2,AveragePhenoDist$Rel_Fit)
# Abs distance PCA2
Q1<-quantile(AveragePhenoDist$AbsStdPD_PCA2)[2]
Q2<-quantile(AveragePhenoDist$AbsStdPD_PCA2)[3]
Q3<-quantile(AveragePhenoDist$AbsStdPD_PCA2)[3]
AveragePhenoDist$Similarity<-ifelse(AveragePhenoDist$AbsStdPD_PCA2<Q1,"High","Low")
AveragePhenoDist[AveragePhenoDist$AbsStdPD_PCA2>Q1&AveragePhenoDist$AbsStdPD_PCA2<Q3,"Similarity"]<-"Medium"
AveragePhenoDist$Similarity <- factor(AveragePhenoDist$Similarity, levels=c("Low", "Medium", "High"))
count(AveragePhenoDist,Similarity)
ggplot(AveragePhenoDist)+
geom_bar(aes(Similarity,Rel_Fit),stat="identity",position="dodge")
ggerrorplot(AveragePhenoDist, x = "Similarity", y = "Rel_Fit",
desc_stat = "mean_sd", color = "black",
add = "jitter", add.params = list(color = "darkgray")
)
# Chunk 49
# Subset for I purpurea species
IpPA4<-droplevels(TraitsAll%>%filter(Species=="Ip"))
# Calculate mean of traits by treatment, maternal line and block
pcFamilyMeans<-aggregate(list(IpPA4[c("PCA1","PCA2","PCA3","PCA4")]),by=list(IpPA4$Trt,IpPA4$ML,IpPA4$Combos),FUN=mean) #
colnames(pcFamilyMeans)[1:3]<-c("Trt","ML","Combos")
for(i in c("PCA1","PCA2","PCA3","PCA4")){
Quadratic=pcFamilyMeans[i]*pcFamilyMeans[i]
pcFamilyMeans=cbind(pcFamilyMeans,Quadratic)
}
dim(pcFamilyMeans)
colnames(pcFamilyMeans)[8:11]<-paste(c("PCA1","PCA2","PCA3","PCA4"),"2",sep="_")
pcFamilyMeans<-merge(pcFamilyMeans,RelFitMean)
PCAall=pcFamilyMeans
PCAalone<-droplevels(pcFamilyMeans%>%filter(Trt=="Alone"))
PCAcomp<-droplevels(pcFamilyMeans%>%filter(Trt!="Alone"))
summary(lm(Rel_Fit~PCA1,PCAalone%>%filter(PCA1>-4)))
summary(lm(Rel_Fit~PCA2,PCAalone))
summary(lm(Rel_Fit~PCA3,PCAalone))
summary(lm(Rel_Fit~PCA4,PCAalone))
summary(lm(Rel_Fit~PCA1,PCAcomp%>%filter(PCA1>-4))) # Wehn I filter out for PCA 1 score less than -4 I get significant linear relationship.
summary(lm(Rel_Fit~PCA2,PCAcomp))
summary(lm(Rel_Fit~PCA3,PCAcomp))
summary(lm(Rel_Fit~PCA4,PCAcomp))
anova(lm(Rel_Fit~Trt+PCA1+Trt:PCA1,PCAall)) # Marginal effect of treatment by PCA 1 interaction
anova(lm(Rel_Fit~Trt+PCA2+Trt:PCA2,PCAall)) # Marginal effect of treatment by PCA 1 interaction
anova(lm(Rel_Fit~Trt+PCA3+Trt:PCA3,PCAall)) # Marginal effect of treatment by PCA 1 interaction
anova(lm(Rel_Fit~Trt+PCA4+Trt:PCA4,PCAall)) # Marginal effect of treatment by PCA 1 interaction
# Chunk 50
summary(lm(Rel_Fit~PCA1+PCA1_2,PCAalone))
summary(lm(Rel_Fit~PCA2+PCA2_2,PCAalone))
summary(lm(Rel_Fit~PCA3+PCA3_2,PCAalone))
summary(lm(Rel_Fit~PCA4+PCA4_2,PCAalone))
summary(lm(Rel_Fit~PCA1+PCA1_2,PCAcomp)) # Evidence of quadratic selection on PCA 1
summary(lm(Rel_Fit~PCA1+PCA1_2,PCAcomp%>%filter(PCA1>-4))) # NO evidence of quadratic selection on PCA 1 when we filter scores less than -4
summary(lm(Rel_Fit~PCA2+PCA2_2,PCAcomp))
summary(lm(Rel_Fit~PCA3+PCA3_2,PCAcomp))
summary(lm(Rel_Fit~PCA4+PCA4_2,PCAcomp))
# Does competition alter pattern of quadratic selection ?
anova(lm(Rel_Fit~Trt+PCA1+PCA1_2+Trt:PCA1+Trt:PCA1_2,PCAall))
anova(lm(Rel_Fit~Trt+PCA2+PCA2_2+Trt:PCA2+Trt:PCA2_2,PCAall))
anova(lm(Rel_Fit~Trt+PCA3+PCA3_2+Trt:PCA3+Trt:PCA3_2,PCAall))
anova(lm(Rel_Fit~Trt+PCA4+PCA4_2+Trt:PCA4+Trt:PCA4_2,PCAall))
Q2<-ggplot(PCAcomp, aes(PCA1, Rel_Fit))+
geom_point()+
stat_smooth(method="lm", formula=y~poly(x,2,raw=T),colour="red",se=F)+
theme_classic()+
geom_text(aes(label="P-value = 0.03", family="Times", fontface="bold",  lineheight=.8,x=1,y=-5,hjust = 0))+
geom_text(aes(label="Gamma = 0.76", family="Times", fontface="bold",  lineheight=.8,x=1,y=-3,hjust = 0))+
xlab("PCA 1 (Filtered)")
Q1<-ggplot(PCAall, aes(PCA1, Rel_Fit))+
geom_point()+
stat_smooth(method="lm", formula=y~poly(x,2,raw=T),colour="red",se=F)+
theme_classic()+
geom_text(aes(label="P-value = 0.03", family="Times", fontface="bold",  lineheight=.8,x=1,y=-5,hjust = 0))+
geom_text(aes(label="Gamma = 0.68", family="Times", fontface="bold",  lineheight=.8,x=1,y=-3,hjust = 0))+
xlab("PCA 1 (Original)")
Q<-ggplot(PCAall)+
geom_point(aes(PCA1, Rel_Fit,color=Trt))+
scale_color_manual(values=c("red","black"))+
stat_smooth(aes(PCA1, Rel_Fit,color=Trt,linetype=Trt),alpha=0.5,method="lm", formula=y~poly(x,2,raw=T),se=F)+
scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("Relative fitness")+
xlab("Root topology (PC1)")+
theme(axis.text.x = element_text(face="bold",
size=20),
axis.text.y = element_text(face="bold",
size=20),axis.title.y = element_text(face="bold",size=20),
axis.title.x = element_text(face="bold",
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+ theme(legend.text=element_text(size=15),legend.title=element_text(size=15))
# Plotting linear selection on PC 1
L<-ggplot(PCAall%>%filter(PCA1>-4))+
geom_point(aes(PCA1, Rel_Fit,color=Trt))+
scale_color_manual(values=c("red","black"))+
stat_smooth(aes(PCA1, Rel_Fit,color=Trt,linetype=Trt),alpha=0.5,method="lm", formula=y~x,se=F)+
scale_linetype_manual(values=c("twodash", "solid"))+
theme_classic()+
ylab("")+
xlab("Root topology (PC1)")+
theme(axis.text.x = element_text(face="bold",
size=20),
axis.text.y = element_text(face="bold",
size=20),axis.title.y = element_text(face="bold",size=20),
axis.title.x = element_text(face="bold",
size=20))+
theme(axis.text.x = element_text(vjust = 1, hjust=1))+ theme(legend.text=element_text(size=15),legend.title=element_text(size=15))
ggarrange(Q,L,labels="AUTO",common.legend = T,label.x = 0.20,label.y = 1)
# Selection on PCA 1 colored points by phenotypic distance values
ggplot(merge(PCAall,AveragePhenoDist), aes(PCA1, Rel_Fit))+
geom_point(aes(colour=AbsStdPD_PCA1),size=4)+
stat_smooth(method="lm", formula=y~poly(x,2,raw=T),colour="red",se=F)+
theme_classic()+
geom_text(aes(label="P-value = 0.03", family="Times", fontface="bold",  lineheight=.8,x=1,y=-5,hjust = 0))+
geom_text(aes(label="Gamma = 0.68", family="Times", fontface="bold",  lineheight=.8,x=1,y=-3,hjust = 0))+
xlab("Root topology (PC1)")+
scale_colour_gradientn(colours = terrain.colors(10))+
labs(colour="Phenotypic distance")+
Tx2
ggplot(merge(PCAall,AveragePhenoDist), aes(PCA2, Rel_Fit))+
geom_point(aes(colour=AbsStdPD_PCA1),size=4)+
stat_smooth(method="lm", formula=y~poly(x,2,raw=T),colour="red",se=F)+
theme_classic()+
xlab("Root architecture (PC2)")+
scale_colour_gradientn(colours = terrain.colors(10))+
labs(colour="Phenotypic distance")+
Tx2
# Chunk 51
# Compute family means and scale the values
# Correct the combos to none for alone treatments
HerbResid$Combos<-as.character(HerbResid$Combos)
HerbResid[which(HerbResid$Trt=="Alone"),"Combos"]<-"none"
HerbResid$Combos<-as.factor(HerbResid$Combos)
FlowerResid$Combos<-as.character(FlowerResid$Combos)
FlowerResid[which(FlowerResid$Trt=="Alone"),"Combos"]<-"none"
FlowerResid$Combos<-as.factor(FlowerResid$Combos)
HerbAverage<-aggregate(Herb_Resid~ML+Trt+Combos,HerbResid,FUN=mean)
HerbAverage$ScaledHerb<-scale(HerbAverage$Herb_Resid)
FlowerAverage<-aggregate(Flower_JD_Resid~ML+Trt+Combos,FlowerResid,FUN=mean)
FlowerAverage$ScaledFlowerJD<-scale(FlowerAverage$Flower_JD_Resid)
# Combine the flower and herbivory data to PCAall
PCAall1<-merge(HerbAverage,PCAall)
PCAall2<-merge(FlowerAverage,PCAall1)
dim(PCAall2)
PCAalone1<-droplevels(PCAall2%>%filter(Trt=="Alone"))
PCAcomp1<-droplevels(PCAall2%>%filter(Trt!="Alone"))
summary(lm(Rel_Fit~PCA1+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA2+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA3+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA4+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA1+ScaledHerb+ScaledFlowerJD,PCAcomp1))
summary(lm(Rel_Fit~PCA2+ScaledHerb+ScaledFlowerJD,PCAcomp1))
summary(lm(Rel_Fit~PCA3+ScaledHerb+ScaledFlowerJD,PCAcomp1))
summary(lm(Rel_Fit~PCA4+ScaledHerb+ScaledFlowerJD,PCAcomp1))
# Repeat for quadratic selection
summary(lm(Rel_Fit~PCA1+PCA1_2+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA2+PCA2_2+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA3+PCA3_2+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA4+PCA4_2+ScaledHerb+ScaledFlowerJD,PCAalone1))
summary(lm(Rel_Fit~PCA1+PCA1_2+ScaledFlowerJD,PCAcomp1)) # Evidence of quadratic selection on PCA 1
summary(lm(Rel_Fit~PCA2+PCA2_2+ScaledFlowerJD,PCAcomp1))
summary(lm(Rel_Fit~PCA3+PCA3_2+ScaledHerb+ScaledFlowerJD,PCAcomp1))
summary(lm(Rel_Fit~PCA4+PCA4_2+ScaledHerb+ScaledFlowerJD,PCAcomp1))
# Correlation test within alone trt
cor.test(PCAalone1$ScaledHerb,PCAalone1$PCA1)
cor.test(PCAalone1$ScaledHerb,PCAalone1$PCA2)
cor.test(PCAalone1$ScaledHerb,PCAalone1$PCA3)
cor.test(PCAalone1$ScaledHerb,PCAalone1$PCA4)
cor.test(PCAalone1$ScaledFlowerJD,PCAalone1$PCA1)
cor.test(PCAalone1$ScaledFlowerJD,PCAalone1$PCA2)
cor.test(PCAalone1$ScaledFlowerJD,PCAalone1$PCA3)
cor.test(PCAalone1$ScaledFlowerJD,PCAalone1$PCA4) # NO significant correlation between PC4 and flowerint time.
# Correlation test within competition
cor.test(PCAcomp1$ScaledHerb,PCAcomp1$PCA1)
cor.test(PCAcomp1$ScaledHerb,PCAcomp1$PCA2)
cor.test(PCAcomp1$ScaledHerb,PCAcomp1$PCA3)
cor.test(PCAcomp1$ScaledHerb,PCAcomp1$PCA4)
cor.test(PCAcomp1$ScaledFlowerJD,PCAcomp1$PCA1)
cor.test(PCAcomp1$ScaledFlowerJD,PCAcomp1$PCA2)
cor.test(PCAcomp1$ScaledFlowerJD,PCAcomp1$PCA3)
cor.test(PCAcomp1$ScaledFlowerJD,PCAcomp1$PCA4) # Significant negative correlation between PC4 and flowerint time.
plot(PCAcomp1$ScaledFlowerJD,PCAcomp1$PCA4)
# Correlation across competition
cor.test(PCAall2$ScaledHerb,PCAall2$PCA1)
cor.test(PCAall2$ScaledHerb,PCAall2$PCA2)
cor.test(PCAall2$ScaledHerb,PCAall2$PCA3)
cor.test(PCAall2$ScaledHerb,PCAall2$PCA4)
cor.test(PCAall2$ScaledFlowerJD,PCAall2$PCA1)
cor.test(PCAall2$ScaledFlowerJD,PCAall2$PCA2)
cor.test(PCAall2$ScaledFlowerJD,PCAall2$PCA3)
cor.test(PCAall2$ScaledFlowerJD,PCAall2$PCA4)
# Chunk 52
# Save output
# Make combos comparable to 2017 data
MatInfo<-tot2[c("Species","ML","Comp","Combos","Trt")]
colnames(MatInfo)[which(names(MatInfo)%in%"Combos")]<-"Comboscopy"
colnames(MatInfo)[which(names(MatInfo)%in%"ML")]<-"MLcopy"
totTrans$Comboscopy<-totTrans$Combos
MatInfo$ML<-gsub("PA","",MatInfo$ML)
MatInfo$ML<-gsub(" ", "",MatInfo$ML,fixed = T)
MatInfo$ML<-gsub("Ip", "",MatInfo$ML,fixed = T)
MatInfo$ML<-gsub("Ihed", "",MatInfo$ML,fixed = T)
MatInfo$Comp<-gsub("PA","",MatInfo$Comp)
MatInfo$Comp<-gsub(" ", "",MatInfo$Comp,fixed = T)
MatInfo$Comp<-gsub("Ip", "",MatInfo$Comp,fixed = T)
MatInfo$Comp<-gsub("Ihed", "",MatInfo$Comp,fixed = T)
MatInfo$ML<-paste(ifelse(MatInfo$Species=="Ip",print("Ip"),print("Ihed")), MatInfo$ML,sep="-")
MatInfo$Comp<-paste(ifelse(MatInfo$Species=="Ip",print("Ihed"),print("Ip")), MatInfo$Comp,sep="-")
#IhedMat<-MatInfo%>%filter(Species=="Ihed")
#IhedMat$Combos<-paste(IhedMat$ML,IhedMat$Comp,sep="-")
MatInfo$Combos=NA
for(i in 1:nrow(MatInfo)){
if(MatInfo[i,"Species"]=="Ip")
{
MatInfo[i,"Combos"]=paste(MatInfo[i,"Comp"],MatInfo[i,"ML"],sep="-")
}
else{
MatInfo[i,"Combos"]=paste(MatInfo[i,"ML"],MatInfo[i,"Comp"],sep="-")
}
}
MatInfo[which(MatInfo$Trt=="Alone"),"Comboscopy"]<-"none"
MatInfo[which(MatInfo$Trt=="Alone"),"Combos"]<-"none"
MatInfo[which(MatInfo$Trt=="Alone"),"Comp"]<-"none"
# Not that we have the updated Combo,Comp and ML encoding, merge to data set of interest
# 1) Average family means of PC values
# 2) Average family means of relative fitness
# 3) Phenotypic distance between competitors
# 1) Average family means of PC values and relative fitness
PCAallnew<-PCAall
PCAallnew$Comboscopy<-PCAallnew$Combos
PCAallnew$MLcopy<-PCAallnew$ML
PCAallnew<-PCAallnew[-which(names(PCAall)%in%c("Combos","ML"))]
PCAallnew<-PCAallnew[-grep("_2",names(PCAallnew))]
PCAallnew<-merge(PCAallnew,MatInfo)
# 2) Average family mean of phenotypic distances and relative fitness
AveragePhenoDist2<-AveragePhenoDist
AveragePhenoDist2$MLcopy<-AveragePhenoDist2$ML
AveragePhenoDist2$Comboscopy<-AveragePhenoDist2$Combos
AveragePhenoDist2<-AveragePhenoDist2[-which(names(AveragePhenoDist2)%in%c("Combos","ML"))]
AveragePhenoDist2<-merge(AveragePhenoDist2,MatInfo)
AveragePhenoDist2<-AveragePhenoDist2[-grep("AbsStd",names(AveragePhenoDist2))]
AveragePhenoDist2<-AveragePhenoDist2[-grep("StdPD",names(AveragePhenoDist2))]
# Fitness means
RelFitMean$Comboscopy<-RelFitMean$Combos
RelFitMean2<-RelFitMean[-which(names(RelFitMean)%in%c("Combos","ML"))]
RelFitMean2<-merge(RelFitMean2,MatInfo)
# write.csv(totTrans,"Dirt_transformed_2018.csv",row.names=F)
# write.csv(PCAallnew,"PCA_average_2018.csv",row.names=F)
# write.csv(AveragePhenoDist2,"PhenDist_average_2018.csv",row.names=F)
# write.csv(Both2,"PhenotypicDist_2018.csv",row.names=F)
# write.csv(RelFitMean2,"RelativeFitnessAverage_2018.csv",row.names=F)
Loads
View(Loads)
View(Loads[1:20])
View(Loads[c(1:20)])
View(Loads[,c(1:20)])
View(Loads[c(1:20),])
View(Loads)
summary(lm(Rel_Fit~PCA1,PCAalone%>%filter(PCA1>-4)))
summary(lm(Rel_Fit~PCA2,PCAalone))
summary(lm(Rel_Fit~PCA3,PCAalone))
summary(lm(Rel_Fit~PCA4,PCAalone))
summary(lm(Rel_Fit~PCA1,PCAalone))
summary(lm(Rel_Fit~PCA1,PCAalone%>%filter(PCA1>-4)))
summary(lm(Rel_Fit~PCA1,PCAcomp%>%filter(PCA1>-4))) # Wehn I filter out for PCA 1 score less than -4 I get significant linear relationship.
summary(lm(Rel_Fit~PCA2,PCAcomp))
summary(lm(Rel_Fit~PCA3,PCAcomp))
summary(lm(Rel_Fit~PCA4,PCAcomp))
getwd
